---
export interface SubMenuItem {
  title: string;
  active?: boolean;
}

export interface MenuItem {
  title: string;
  active?: boolean;
  submenu?: SubMenuItem[];
  icon?: string;
}

export const menu: MenuItem[] = [
  {
    title: "HOME",
    submenu: [
      { title: "The Perfect Master" },
      { title: "Vision, Mission & Values" },
      { title: "Founder – Chairman" },
      { title: "Key Personnel" },
      { title: "Advisory Board" },
      { title: "Our Affiliations", active: true },
    ],
    icon: "home",
    active: true,
  },
  {
    title: "ABOUT US",
    submenu: [
      { title: "The Perfect Master" },
      { title: "Vision, Mission & Values" },
      { title: "Founder – Chairman" },
      { title: "Key Personnel" },
      { title: "Advisory Board" },
      { title: "Our Affiliations", active: true },
    ],
    icon: "about",
  },
  {
    title: "RESULTS",
    submenu: [
      { title: "Academic Achievements" },
      { title: "Sports Performance" },
      { title: "University Rankers" },
      { title: "International Awards" },
    ],
    icon: "results",
  },
  {
    title: "GLOBAL CONNECT",
    submenu: [
      { title: "Exchange Programs" },
      { title: "Global Internships" },
      { title: "International Conferences" },
    ],
    icon: "globe",
  },
  {
    title: "STUDENT LEADERS",
    submenu: [
      { title: "Leadership Council" },
      { title: "Class Representatives" },
      { title: "Ambassador Programs" },
    ],
    icon: "leaders",
  },
  {
    title: "MEDIA",
    submenu: [
      { title: "News & Events" },
      { title: "Press Releases" },
      { title: "Gallery" },
      { title: "Videos" },
    ],
    icon: "media",
  },
  {
    title: "ALUMNI",
    submenu: [
      { title: "Success Stories" },
      { title: "Reunions" },
      { title: "Alumni Association" },
    ],
    icon: "alumni",
  },
  {
    title: "ADMISSIONS",
    submenu: [
      { title: "How to Apply" },
      { title: "Courses Offered" },
      { title: "Fee Structure" },
      { title: "Scholarships" },
    ],
    icon: "admissions",
  },
];
---

<!-- Backdrop --><!-- This is the dark overlay behind the sidebar when open -->
<div
  id="menu-backdrop"
  class="bg-n-950/50 invisible fixed inset-0 z-40 opacity-0 backdrop-blur-sm transition-opacity duration-300 ease-in-out"
>
</div>

<!-- Sidebar -->
<!-- The main sidebar navigation -->
<aside
  id="sidebar"
  class="fixed inset-y-0 right-0 z-49 w-full translate-x-full transform bg-violet-600 transition-transform duration-300 ease-in-out xl:max-w-[704px]"
>
  <nav class="flex h-full flex-col overflow-y-auto" data-accordion>
    <div class="pt-38 pb-10 md:pt-10">
      <!-- Close Button for Sidebar -->
      <div
        class="z-3 mb-10 hidden w-full justify-end bg-violet-600 pr-10 md:flex"
      >
        <div
          class="bg-n-50/10 hover:bg-n-50/20 cursor-pointer items-center justify-center rounded-xl p-3 transition md:p-5"
          id="menu-close"
          role="button"
          tabindex="0"
        >
          <!-- Close (X) Icon SVG -->
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            viewBox="0 0 16 16"
            fill="none"
          >
            <g clip-path="url(#clip0_3871_1253)">
              <path
                d="M0.958597 0.67093C1.19644 0.463586 1.55755 0.488367 1.76496 0.726175C5.97244 5.55037 10.4491 10.0271 15.2733 14.2345C15.5111 14.442 15.5359 14.8031 15.3286 15.0409C15.1212 15.2787 14.7601 15.3035 14.5222 15.0962C9.65879 10.8545 5.14504 6.34072 0.903352 1.47729C0.696008 1.23945 0.720789 0.878337 0.958597 0.67093Z"
                fill="white"></path>
              <path
                d="M14.2345 0.726176C14.442 0.488366 14.8031 0.463586 15.0409 0.67093C15.2787 0.878337 15.3035 1.23945 15.0962 1.47729C10.8545 6.34073 6.34072 10.8545 1.47729 15.0962C1.23945 15.3035 0.878338 15.2787 0.670931 15.0409C0.463585 14.8031 0.488367 14.442 0.726177 14.2345C5.55037 10.0271 10.0271 5.55038 14.2345 0.726176Z"
                fill="white"></path>
            </g>
            <defs>
              <clipPath id="clip0_3871_1253">
                <rect width="16" height="16" fill="white"></rect>
              </clipPath>
            </defs>
          </svg>
        </div>
      </div>
      {
        // Render each main menu item
        menu.map((menuItem: MenuItem, index: number) => {
          const open = !!menuItem.active;
          return (
            <section
              class="flex flex-col px-8 py-3 data-[open=true]:bg-violet-700 data-[open=true]:py-6 md:px-10 md:py-3.5 md:data-[open=true]:py-7 lg:px-28"
              data-menu-item
              data-open={open ? "true" : "false"}
              data-index={index}
            >
              {/* Main menu button */}
              <button
                class="flex w-full cursor-pointer items-center justify-between text-left outline-none"
                data-menu-header
                aria-expanded={open}
              >
                <span class="flex items-center gap-5">
                  {/* Menu icon */}
                  <span class="inline-flex size-5">
                    <img
                      src={`/icons/${menuItem.icon}.svg`}
                      alt=""
                      class="h-full w-full"
                      loading="lazy"
                      decoding="async"
                    />
                  </span>
                  {/* Menu title */}
                  <span class="font-secondary text-base text-white data-[open=true]:font-semibold md:text-xl">
                    {menuItem.title}
                  </span>
                </span>

                {/* Expand/collapse icon */}
                <span class="inline-flex items-center" aria-hidden="true">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    width="18"
                    height="18"
                    viewBox="0 0 18 18"
                    fill="none"
                    class="icon"
                  >
                    <rect
                      x="3.8"
                      y="8.3"
                      width="10.4"
                      height="1.4"
                      rx="0.7"
                      class="icon-minus"
                    />
                    <rect
                      x="8.3"
                      y="3.8"
                      width="1.4"
                      height="10.4"
                      rx="0.7"
                      class="icon-plus-vert"
                    />
                  </svg>
                </span>
              </button>

              {/* Submenu for each main menu item */}
              <div
                data-menu-submenu
                data-open={open ? "true" : "false"}
                style={open ? "height:auto" : "height:0"}
                class="flex flex-col gap-2 overflow-hidden transition-all duration-300 ease-in-out data-[open=false]:pt-0 data-[open=false]:pb-0 data-[open=false]:opacity-0 data-[open=true]:pt-5 md:data-[open=true]:pt-7"
              >
                {menuItem.submenu?.map((subMenu) => (
                  // Submenu item
                  <div class="group flex h-[34px] cursor-pointer flex-col gap-1.5 md:gap-2">
                    <p class="text-n-100 font-secondary text-sm tracking-[1.28px] uppercase transition-all duration-300 ease-in-out group-hover:font-semibold group-hover:text-orange-500 md:text-base">
                      {subMenu.title}
                    </p>
                    <div class="bg-n-50/10 h-px w-[73px] transition-all duration-300 ease-in-out group-hover:h-0.5 group-hover:bg-orange-500" />
                  </div>
                ))}
              </div>
            </section>
          );
        })
      }
    </div>
  </nav>
</aside>

<script is:inline>
  // Get DOM elements for sidebar, backdrop, toggle button, accordion container, and close button
  const sidebar = document.getElementById("sidebar");
  const backdrop = document.getElementById("menu-backdrop");
  const exploreBtn = document.getElementById("explore-btn");
  const hamburgerBtn = document.getElementById("hamburger-btn");
  const container = document.querySelector("[data-accordion]");
  const closeBtn = document.getElementById("menu-close");

  // Function to open the sidebar menu
  function openMenu() {
    sidebar.classList.remove("translate-x-full");
    backdrop.classList.remove("opacity-0", "invisible");
    backdrop.classList.add("opacity-100", "visible");
    hamburgerBtn?.classList.add("is-open");
  }

  // Function to close the sidebar menu
  function closeMenu() {
    sidebar.classList.add("translate-x-full");
    backdrop.classList.add("opacity-0", "invisible");
    backdrop.classList.remove("opacity-100", "visible");
    hamburgerBtn?.classList.remove("is-open");
  }

  // Open sidebar when clicking Explore button
  exploreBtn?.addEventListener("click", (e) => {
    e.preventDefault();
    if (sidebar.classList.contains("translate-x-full")) {
      openMenu();
    } else {
      closeMenu();
    }
  });

  // Open sidebar when clicking Hamburger button
  hamburgerBtn?.addEventListener("click", (e) => {
    e.preventDefault();
    if (sidebar.classList.contains("translate-x-full")) {
      openMenu();
    } else {
      closeMenu();
    }
  });

  // Close sidebar when clicking on backdrop
  backdrop?.addEventListener("click", closeMenu);

  // Close sidebar when clicking the close button
  closeBtn?.addEventListener("click", closeMenu);

  // Accordion logic for expanding/collapsing menu sections
  if (container) {
    const openSection = (section) => {
      const submenu = section.querySelector("[data-menu-submenu]");
      if (!submenu) return;
      section.setAttribute("data-open", "true");
      submenu.setAttribute("data-open", "true");
      const h = submenu.scrollHeight;
      submenu.style.height = h + "px";
      const onEnd = (ev) => {
        if (ev.propertyName !== "height") return;
        submenu.removeEventListener("transitionend", onEnd);
      };
      submenu.addEventListener("transitionend", onEnd);
      const btn = section.querySelector("[data-menu-header]");
      btn && btn.setAttribute("aria-expanded", "true");
    };

    const closeSection = (section) => {
      const submenu = section.querySelector("[data-menu-submenu]");
      if (!submenu) return;
      // if height is auto, set to pixel height first to enable transition
      if (
        getComputedStyle(submenu).height === "auto" ||
        submenu.style.height === "auto"
      ) {
        submenu.style.height = submenu.scrollHeight + "px";
      }
      submenu.style.height = "0px";
      section.setAttribute("data-open", "false");
      submenu.setAttribute("data-open", "false");
      const btn = section.querySelector("[data-menu-header]");
      btn && btn.setAttribute("aria-expanded", "false");
    };

    container.addEventListener("click", (e) => {
      const header = e.target.closest
        ? e.target.closest("[data-menu-header]")
        : null;
      if (!header) return;
      const item = header.closest("[data-menu-item]");
      if (!item) return;
      const isOpen = item.getAttribute("data-open") === "true";

      // Close all
      container.querySelectorAll("[data-menu-item]").forEach((el) => {
        closeSection(el);
      });

      if (!isOpen) openSection(item);
    });
  }
</script>

<style>
  /* Transition for submenu open/close using height for smooth auto-size */
  [data-menu-submenu] {
    transition:
      height 0.3s ease,
      opacity 0.3s ease,
      padding 0.3s ease;
    will-change: height;
  }

  /* Icon color styling */
  [data-menu-item] .icon rect {
    fill: var(--color-n-50);
    stroke: var(--color-n-50);
    stroke-width: 0.4;
  }

  /* Make the menu title semibold when submenu is open */
  [data-menu-item][data-open="true"] [data-menu-header] span:last-child {
    font-weight: 600; /* semibold */
  }

  /* Hide plus icon when open */
  [data-menu-item][data-open="true"] .icon .icon-plus-vert {
    opacity: 0;
  }

  /* Show plus icon when closed */
  [data-menu-item][data-open="false"] .icon .icon-plus-vert {
    opacity: 1;
  }

  /* Make backdrop visible when menu is open */
  #menu-backdrop.visible {
    visibility: visible;
  }
</style>
