---
import SectionHeaderC from "../../components/SectionHeaderC.astro";

const slides = [
  "/images/result-image.png",
  "/images/result-image.png",
  "/images/result-image.png",
  "/images/result-image.png",
  "/images/result-image.png",
];

const total = 5;
const active = 2;
---

<section>
  <div
    class="container mx-auto flex flex-col gap-9 px-6 py-14 md:gap-12 md:px-0 md:py-20 lg:gap-14 lg:px-6 lg:py-24 xl:px-0"
  >
    <!-- Section Header with Lines -->
    <SectionHeaderC
      eyebrowText="National Achievers"
      title="Honouring the Achievers of SAI"
      subtitle="Inspiring journeys of dedication, discipline, and distinction."
    />

    <!-- Slider wrapper -->
    <div class="flex flex-col items-center gap-6 md:gap-10">
      <!-- Viewport -->
      <div class="overflow-hidden rounded-xl" id="data-embla-viewport">
        <!-- Container -->
        <div class="flex" data-embla-container>
          {
            slides.map((src, i) => (
              <div class="w-full min-w-0 shrink-0" data-embla-slide>
                <img
                  src={src}
                  alt={`Slide ${i + 1}`}
                  class="pointer-events-none block h-auto w-full select-none"
                  draggable="false"
                />
              </div>
            ))
          }
        </div>
      </div>

      <!-- Buttons wrapper -->
      <div class="flex items-center justify-center gap-8 md:gap-12 lg:gap-20">
        <!--  Prev button -->
        <button
          type="button"
          id="prevButton"
          class="bg-n-100 border-n-200 hover:bg-n-200 flex size-6 cursor-pointer items-center justify-center rounded-full border p-1 md:size-14"
          data-prev
          aria-label="Previous"
        >
          <span class="inline-flex">
            <svg
              class="size-3 md:size-7"
              xmlns="http://www.w3.org/2000/svg"
              width="29"
              height="29"
              viewBox="0 0 29 29"
              fill="none"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M10.7964 5.9684C11.1229 6.08513 11.3018 6.26134 11.4283 6.59064C11.508 6.79812 11.4864 7.12836 11.3787 7.34849C11.2662 7.57834 11.1138 7.71283 10.7461 7.90664C9.79415 8.40832 8.96949 8.96597 8.07436 9.71332C6.87991 10.7106 5.79432 11.8731 4.9112 13.1006L4.63927 13.4786L15.4848 13.4928C24.0302 13.5038 26.3516 13.5142 26.4303 13.5417C26.5724 13.5911 26.7876 13.7508 26.8948 13.8862C27.1716 14.236 27.1689 14.7713 26.8885 15.1269C26.7998 15.2395 26.5857 15.3923 26.4284 15.4554C26.3451 15.4888 24.7043 15.4967 15.4853 15.5086L4.64033 15.5226L4.87057 15.8446C5.88409 17.2621 7.18564 18.6147 8.58018 19.6997C9.2043 20.1853 9.95493 20.671 10.6752 21.0552C10.889 21.1693 11.1168 21.3136 11.1813 21.3758C11.353 21.5416 11.4541 21.7671 11.4704 22.0207C11.4868 22.2765 11.4462 22.432 11.3067 22.6477C11.1844 22.8371 11.0225 22.9577 10.7819 23.0388C10.4501 23.1506 10.2573 23.1093 9.68736 22.8041C8.20714 22.0117 6.90643 21.0347 5.53082 19.6819C4.05552 18.2311 2.97198 16.802 2.12251 15.1866C1.76731 14.5111 1.78623 14.3826 2.39896 13.3106C3.20897 11.8936 4.19992 10.6306 5.53115 9.31868C6.89671 7.97298 8.18353 7.00608 9.68436 6.19803C10.2552 5.8907 10.4606 5.84828 10.7964 5.9684Z"
                fill="#45556C"></path>
            </svg>
          </span>
        </button>

        <!-- Dots -->
        <div id="emblaDots" class="flex items-center gap-1 md:gap-2">
          {
            slides.map((_, i) => (
              <button
                type="button"
                class="embla-dot bg-n-300 size-1.5 cursor-pointer rounded-full transition-[background-color,transform] duration-150 aria-selected:scale-110 aria-selected:bg-orange-500 md:size-2.5"
                aria-label={`Go to slide ${i + 1}`}
                aria-selected="false"
                data-dot-index={i}
              />
            ))
          }
        </div>

        <!-- Next button -->
        <button
          type="button"
          class="bg-n-100 border-n-200 hover:bg-n-200 flex size-6 cursor-pointer items-center justify-center rounded-full border p-1 md:size-14"
          id="nextButton"
        >
          <span class="inline-flex rotate-180">
            <svg
              class="size-3 md:size-7"
              xmlns="http://www.w3.org/2000/svg"
              width="29"
              height="29"
              viewBox="0 0 29 29"
              fill="none"
            >
              <path
                fill-rule="evenodd"
                clip-rule="evenodd"
                d="M10.7964 5.9684C11.1229 6.08513 11.3018 6.26134 11.4283 6.59064C11.508 6.79812 11.4864 7.12836 11.3787 7.34849C11.2662 7.57834 11.1138 7.71283 10.7461 7.90664C9.79415 8.40832 8.96949 8.96597 8.07436 9.71332C6.87991 10.7106 5.79432 11.8731 4.9112 13.1006L4.63927 13.4786L15.4848 13.4928C24.0302 13.5038 26.3516 13.5142 26.4303 13.5417C26.5724 13.5911 26.7876 13.7508 26.8948 13.8862C27.1716 14.236 27.1689 14.7713 26.8885 15.1269C26.7998 15.2395 26.5857 15.3923 26.4284 15.4554C26.3451 15.4888 24.7043 15.4967 15.4853 15.5086L4.64033 15.5226L4.87057 15.8446C5.88409 17.2621 7.18564 18.6147 8.58018 19.6997C9.2043 20.1853 9.95493 20.671 10.6752 21.0552C10.889 21.1693 11.1168 21.3136 11.1813 21.3758C11.353 21.5416 11.4541 21.7671 11.4704 22.0207C11.4868 22.2765 11.4462 22.432 11.3067 22.6477C11.1844 22.8371 11.0225 22.9577 10.7819 23.0388C10.4501 23.1506 10.2573 23.1093 9.68736 22.8041C8.20714 22.0117 6.90643 21.0347 5.53082 19.6819C4.05552 18.2311 2.97198 16.802 2.12251 15.1866C1.76731 14.5111 1.78623 14.3826 2.39896 13.3106C3.20897 11.8936 4.19992 10.6306 5.53115 9.31868C6.89671 7.97298 8.18353 7.00608 9.68436 6.19803C10.2552 5.8907 10.4606 5.84828 10.7964 5.9684Z"
                fill="#45556C"></path>
            </svg>
          </span>
        </button>
      </div>
    </div>
  </div>
</section>

<script>
  import EmblaCarousel from "embla-carousel";

  window.addEventListener("DOMContentLoaded", () => {
    // Get the viewport element that contains the carousel
    const viewport = document.getElementById("data-embla-viewport");

    // Stop execution if viewport is missing
    if (!viewport) return;

    // Initialize Embla Carousel
    const embla = EmblaCarousel(viewport, {
      align: "start",
      loop: false,
      containScroll: "trimSnaps",
      dragFree: true,
    });

    const prevBtn = document.getElementById("prevButton");
    const nextBtn = document.getElementById("nextButton");

    // Attach click events to navigation buttons
    if (prevBtn) prevBtn.addEventListener("click", () => embla.scrollPrev());
    if (nextBtn) nextBtn.addEventListener("click", () => embla.scrollNext());

    // Dots
    const dots = Array.from(document.querySelectorAll("[data-dot-index]"));

    // Update selected dot state
    const setSelectedDot = () => {
      const selected = embla.selectedScrollSnap();

      // Handle dot click navigation
      dots.forEach((dot, i) => {
        const isSelected = i === selected;
        dot.setAttribute("aria-selected", isSelected ? "true" : "false");
        dot.classList.toggle("scale-110", isSelected);
      });
    };

    // Handle dot click navigation
    dots.forEach((dot, i) => {
      dot.addEventListener("click", () => embla.scrollTo(i));
    });

    // Attach Embla events to update dots dynamically
    embla.on("select", setSelectedDot);
    embla.on("reInit", setSelectedDot);

    // Initialize dot state once Embla is ready
    setSelectedDot();
  });
</script>
