---
import AwardsCard from "../../components/AwardsCard.astro";
import Button from "../../components/Button.astro";
import SectionHeaderC from "../../components/SectionHeaderC.astro";

// Unique ID per instance (so multiple sliders can live on the same page)
const uid = "embla-awards";

// Data (sample)
const awardsDetails = {
  awardsCard: [
    {
      title: "School of Eminence Award",
      img: "/images/award-image.png",
      subTitle:
        "A celebration of our journey towards nurturing young minds with vision, values, and endless possibilities.",
      year: "2025",
    },
    {
      title: "School of Eminence Award",
      img: "/images/award-image.png",
      subTitle:
        "A celebration of our journey towards nurturing young minds with vision, values, and endless possibilities.",
      year: "2025",
    },
    {
      title: "School of Eminence Award",
      img: "/images/award-image.png",
      subTitle:
        "A celebration of our journey towards nurturing young minds with vision, values, and endless possibilities.",
      year: "2025",
    },
    {
      title: "School of Eminence Award",
      img: "/images/award-image.png",
      subTitle:
        "A celebration of our journey towards nurturing young minds with vision, values, and endless possibilities.",
      year: "2025",
    },
  ],
};
---

<section class="ns-slider">
  <div
    class="container mx-auto flex flex-col gap-9 px-6 py-14 md:gap-16 md:px-0 md:py-20 lg:gap-20 lg:px-8 lg:py-28 2xl:px-0"
  >
    <!-- Section header -->
    <SectionHeaderC
      eyebrowText="Achievements & Recognition"
      title="Celebrating Excellence, Year After Year"
    />

    <!-- Slider root: keep viewport + controls inside this wrapper -->
    <div data-embla-root id={uid} class="space-y-7 md:space-y-9">
      <!-- Viewport -->
      <div class="overflow-hidden" data-embla-viewport>
        <!-- Container -->
        <div
          class="flex items-stretch gap-4"
          data-embla-container
          style="gap: var(--gap)"
        >
          {
            awardsDetails.awardsCard.map((card) => (
              <div class="ns-slide" data-embla-slide>
                <AwardsCard
                  title={card.title}
                  img={card.img}
                  subTitle={card.subTitle}
                  year={card.year}
                />
              </div>
            ))
          }
        </div>
      </div>

      <!-- Controls + Dots -->
      <div
        class="relative flex items-center justify-center gap-8 md:gap-12 lg:gap-20"
      >
        <div class="absolute left-0 max-sm:top-[20px]">
          <Button
            text="View All Rewards"
            rightArrow
            variant="soft"
            size="small"
          />
        </div>

        <!-- Dots -->
        <div class="flex items-center gap-1.5 md:gap-2" data-embla-dots></div>

        <!-- Prev / Next -->
        <div class="absolute right-0 flex gap-2 md:gap-6">
          <button
            type="button"
            class="bg-n-50 border-n-200 hover:bg-n-200 flex size-7 cursor-pointer items-center justify-center rounded-full border p-1 md:size-14"
            data-embla-prev
            aria-label="Previous"
          >
            <span class="inline-flex">
              <!-- your left chevron svg -->
              <svg
                class="size-3.5 md:size-7"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 29 29"
                fill="none"
              >
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M10.7964 5.9684C11.1229 6.08513 11.3018 6.26134 11.4283 6.59064C11.508 6.79812 11.4864 7.12836 11.3787 7.34849C11.2662 7.57834 11.1138 7.71283 10.7461 7.90664C9.79415 8.40832 8.96949 8.96597 8.07436 9.71332C6.87991 10.7106 5.79432 11.8731 4.9112 13.1006L4.63927 13.4786L15.4848 13.4928C24.0302 13.5038 26.3516 13.5142 26.4303 13.5417C26.5724 13.5911 26.7876 13.7508 26.8948 13.8862C27.1716 14.236 27.1689 14.7713 26.8885 15.1269C26.7998 15.2395 26.5857 15.3923 26.4284 15.4554C26.3451 15.4888 24.7043 15.4967 15.4853 15.5086L4.64033 15.5226L4.87057 15.8446C5.88409 17.2621 7.18564 18.6147 8.58018 19.6997C9.2043 20.1853 9.95493 20.671 10.6752 21.0552C10.889 21.1693 11.1168 21.3136 11.1813 21.3758C11.353 21.5416 11.4541 21.7671 11.4704 22.0207C11.4868 22.2765 11.4462 22.432 11.3067 22.6477C11.1844 22.8371 11.0225 22.9577 10.7819 23.0388C10.4501 23.1506 10.2573 23.1093 9.68736 22.8041C8.20714 22.0117 6.90643 21.0347 5.53082 19.6819C4.05552 18.2311 2.97198 16.802 2.12251 15.1866C1.76731 14.5111 1.78623 14.3826 2.39896 13.3106C3.20897 11.8936 4.19992 10.6306 5.53115 9.31868C6.89671 7.97298 8.18353 7.00608 9.68436 6.19803C10.2552 5.8907 10.4606 5.84828 10.7964 5.9684Z"
                  fill="#45556C"></path>
              </svg>
            </span>
          </button>

          <button
            type="button"
            class="bg-n-50 border-n-200 hover:bg-n-200 flex size-7 cursor-pointer items-center justify-center rounded-full border p-1 md:size-14"
            data-embla-next
            aria-label="Next"
          >
            <span class="inline-flex rotate-180">
              <!-- your right chevron svg (rotated) -->
              <svg
                class="size-3.5 md:size-7"
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 29 29"
                fill="none"
              >
                <path
                  fill-rule="evenodd"
                  clip-rule="evenodd"
                  d="M10.7964 5.9684C11.1229 6.08513 11.3018 6.26134 11.4283 6.59064C11.508 6.79812 11.4864 7.12836 11.3787 7.34849C11.2662 7.57834 11.1138 7.71283 10.7461 7.90664C9.79415 8.40832 8.96949 8.96597 8.07436 9.71332C6.87991 10.7106 5.79432 11.8731 4.9112 13.1006L4.63927 13.4786L15.4848 13.4928C24.0302 13.5038 26.3516 13.5142 26.4303 13.5417C26.5724 13.5911 26.7876 13.7508 26.8948 13.8862C27.1716 14.236 27.1689 14.7713 26.8885 15.1269C26.7998 15.2395 26.5857 15.3923 26.4284 15.4554C26.3451 15.4888 24.7043 15.4967 15.4853 15.5086L4.64033 15.5226L4.87057 15.8446C5.88409 17.2621 7.18564 18.6147 8.58018 19.6997C9.2043 20.1853 9.95493 20.671 10.6752 21.0552C10.889 21.1693 11.1168 21.3136 11.1813 21.3758C11.353 21.5416 11.4541 21.7671 11.4704 22.0207C11.4868 22.2765 11.4462 22.432 11.3067 22.6477C11.1844 22.8371 11.0225 22.9577 10.7819 23.0388C10.4501 23.1506 10.2573 23.1093 9.68736 22.8041C8.20714 22.0117 6.90643 21.0347 5.53082 19.6819C4.05552 18.2311 2.97198 16.802 2.12251 15.1866C1.76731 14.5111 1.78623 14.3826 2.39896 13.3106C3.20897 11.8936 4.19992 10.6306 5.53115 9.31868C6.89671 7.97298 8.18353 7.00608 9.68436 6.19803C10.2552 5.8907 10.4606 5.84828 10.7964 5.9684Z"
                  fill="#45556C"></path>
              </svg>
            </span>
          </button>
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  /* Slider-level variables */
  .ns-slider {
    --slides: 1; /* default: mobile shows 1 */
    --gap: 16px; /* match the visual 'gap' above (gap-4 = 16px) */
    --peek: 0px; /* extra visible width to “peek” next slide */
  }
  @media (min-width: 640px) {
    .ns-slider {
      --slides: 2;
      --peek: 0px;
    }
  }
  /* Each slide width: ((100% - total gaps - peek) / slides) */
  .ns-slide {
    flex: 0 0
      calc(
        (100% - (var(--gap) * (var(--slides) - 1)) - var(--peek)) /
          var(--slides)
      );
  }
</style>

<!-- Component-level init: scoped to this slider only -->
<script type="module">
  import { initEmblaRoot } from "/js/embla.js";

  window.addEventListener("DOMContentLoaded", () => {
    const root = document.getElementById("embla-awards");
    initEmblaRoot(root, {
      align: "start",
      slidesToScroll: "2",
      loop: false,
    });
  });
</script>
